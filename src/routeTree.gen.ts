/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root';
import { Route as FormsRouteImport } from './routes/forms';
import { Route as ColorPaletteRouteImport } from './routes/color-palette';
import { Route as ApiDemoRouteImport } from './routes/api-demo';
import { Route as IndexRouteImport } from './routes/index';

const FormsRoute = FormsRouteImport.update({
  id: '/forms',
  path: '/forms',
  getParentRoute: () => rootRouteImport,
} as any);
const ColorPaletteRoute = ColorPaletteRouteImport.update({
  id: '/color-palette',
  path: '/color-palette',
  getParentRoute: () => rootRouteImport,
} as any);
const ApiDemoRoute = ApiDemoRouteImport.update({
  id: '/api-demo',
  path: '/api-demo',
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/api-demo': typeof ApiDemoRoute;
  '/color-palette': typeof ColorPaletteRoute;
  '/forms': typeof FormsRoute;
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/api-demo': typeof ApiDemoRoute;
  '/color-palette': typeof ColorPaletteRoute;
  '/forms': typeof FormsRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  '/': typeof IndexRoute;
  '/api-demo': typeof ApiDemoRoute;
  '/color-palette': typeof ColorPaletteRoute;
  '/forms': typeof FormsRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/' | '/api-demo' | '/color-palette' | '/forms';
  fileRoutesByTo: FileRoutesByTo;
  to: '/' | '/api-demo' | '/color-palette' | '/forms';
  id: '__root__' | '/' | '/api-demo' | '/color-palette' | '/forms';
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  ApiDemoRoute: typeof ApiDemoRoute;
  ColorPaletteRoute: typeof ColorPaletteRoute;
  FormsRoute: typeof FormsRoute;
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/forms': {
      id: '/forms';
      path: '/forms';
      fullPath: '/forms';
      preLoaderRoute: typeof FormsRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/color-palette': {
      id: '/color-palette';
      path: '/color-palette';
      fullPath: '/color-palette';
      preLoaderRoute: typeof ColorPaletteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/api-demo': {
      id: '/api-demo';
      path: '/api-demo';
      fullPath: '/api-demo';
      preLoaderRoute: typeof ApiDemoRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ApiDemoRoute: ApiDemoRoute,
  ColorPaletteRoute: ColorPaletteRoute,
  FormsRoute: FormsRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
